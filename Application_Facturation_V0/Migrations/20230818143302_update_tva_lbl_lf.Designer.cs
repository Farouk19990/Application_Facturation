// <auto-generated />
using System;
using Application_Facturation_V0.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Application_Facturation_V0.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230818143302_update_tva_lbl_lf")]
    partial class update_tva_lbl_lf
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Application_Facturation_V0.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.BonLivraison", b =>
                {
                    b.Property<int>("bonLivraison_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bL_clientid_client")
                        .HasColumnType("int");

                    b.Property<int?>("bL_produitproduit_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_bL")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_client")
                        .HasColumnType("int");

                    b.Property<double>("total_ht")
                        .HasColumnType("float");

                    b.Property<double>("total_ht_avant_remis")
                        .HasColumnType("float");

                    b.Property<double>("total_remise")
                        .HasColumnType("float");

                    b.Property<double>("total_ttc")
                        .HasColumnType("float");

                    b.Property<double>("total_tva")
                        .HasColumnType("float");

                    b.HasKey("bonLivraison_id");

                    b.HasIndex("bL_clientid_client");

                    b.HasIndex("bL_produitproduit_id");

                    b.ToTable("bonLivraisons");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Client", b =>
                {
                    b.Property<int>("id_client")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identifiant_unique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricule_fiscale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telephone_client")
                        .HasColumnType("int");

                    b.HasKey("id_client");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Devis", b =>
                {
                    b.Property<int>("devis_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Devis_clientid_client")
                        .HasColumnType("int");

                    b.Property<int?>("Devis_produitproduit_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_devis")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_client")
                        .HasColumnType("int");

                    b.Property<double>("total_ht")
                        .HasColumnType("float");

                    b.Property<double>("total_ht_avant_remis")
                        .HasColumnType("float");

                    b.Property<double>("total_remise")
                        .HasColumnType("float");

                    b.Property<double>("total_ttc")
                        .HasColumnType("float");

                    b.Property<double>("total_tva")
                        .HasColumnType("float");

                    b.HasKey("devis_id");

                    b.HasIndex("Devis_clientid_client");

                    b.HasIndex("Devis_produitproduit_id");

                    b.ToTable("Devis");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Facture", b =>
                {
                    b.Property<int>("facture_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date_facture")
                        .HasColumnType("datetime2");

                    b.Property<int?>("facture_clientid_client")
                        .HasColumnType("int");

                    b.Property<int?>("facture_produitproduit_id")
                        .HasColumnType("int");

                    b.Property<double>("frais")
                        .HasColumnType("float");

                    b.Property<int>("id_client")
                        .HasColumnType("int");

                    b.Property<double>("timbre_fiscale")
                        .HasColumnType("float");

                    b.Property<double>("total_ht")
                        .HasColumnType("float");

                    b.Property<double>("total_ht_avant_remis")
                        .HasColumnType("float");

                    b.Property<double>("total_remise")
                        .HasColumnType("float");

                    b.Property<double>("total_ttc")
                        .HasColumnType("float");

                    b.Property<double>("total_tva")
                        .HasColumnType("float");

                    b.HasKey("facture_id");

                    b.HasIndex("facture_clientid_client");

                    b.HasIndex("facture_produitproduit_id");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Fournisseur", b =>
                {
                    b.Property<int>("fournisseur_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_postal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identifiant_unique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricule_fiscale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fournisseur_id");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.LigneBL", b =>
                {
                    b.Property<int>("ligne_bonL_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bonLivraison_id")
                        .HasColumnType("int");

                    b.Property<double>("prix_unitaire_ht")
                        .HasColumnType("float");

                    b.Property<int?>("produitBLproduit_id")
                        .HasColumnType("int");

                    b.Property<int>("produit_id")
                        .HasColumnType("int");

                    b.Property<int>("qte")
                        .HasColumnType("int");

                    b.Property<double>("remise")
                        .HasColumnType("float");

                    b.Property<double>("tva")
                        .HasColumnType("float");

                    b.HasKey("ligne_bonL_id");

                    b.HasIndex("produitBLproduit_id");

                    b.ToTable("LignesBL");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.LigneFacture", b =>
                {
                    b.Property<int>("ligne_facture_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("facture_id")
                        .HasColumnType("int");

                    b.Property<double>("prix_unitaire_ht")
                        .HasColumnType("float");

                    b.Property<int>("produit_id")
                        .HasColumnType("int");

                    b.Property<int?>("produit_id1")
                        .HasColumnType("int");

                    b.Property<int>("qte")
                        .HasColumnType("int");

                    b.Property<double>("remise")
                        .HasColumnType("float");

                    b.Property<double>("tva")
                        .HasColumnType("float");

                    b.HasKey("ligne_facture_id");

                    b.HasIndex("produit_id1");

                    b.ToTable("LigneFactures");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.LigneProduit", b =>
                {
                    b.Property<int>("ligne_produit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("devis_id")
                        .HasColumnType("int");

                    b.Property<double>("prix_unitaire_ht")
                        .HasColumnType("float");

                    b.Property<int>("produit_id")
                        .HasColumnType("int");

                    b.Property<int?>("produit_id1")
                        .HasColumnType("int");

                    b.Property<double>("qte")
                        .HasColumnType("float");

                    b.Property<double>("remise")
                        .HasColumnType("float");

                    b.Property<double>("tva")
                        .HasColumnType("float");

                    b.HasKey("ligne_produit_id");

                    b.HasIndex("produit_id1");

                    b.ToTable("LigneProduits");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Produit", b =>
                {
                    b.Property<int>("produit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fournisseurPfournisseur_id")
                        .HasColumnType("int");

                    b.Property<int>("fournisseur_id")
                        .HasColumnType("int");

                    b.Property<double>("prix_ht")
                        .HasColumnType("float");

                    b.Property<double>("prix_unitaire_ht")
                        .HasColumnType("float");

                    b.Property<int>("tva")
                        .HasColumnType("int");

                    b.Property<string>("unite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("produit_id");

                    b.HasIndex("fournisseurPfournisseur_id");

                    b.ToTable("Produit");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.BonLivraison", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.Client", "bL_client")
                        .WithMany()
                        .HasForeignKey("bL_clientid_client");

                    b.HasOne("Application_Facturation_V0.Models.Produit", "bL_produit")
                        .WithMany()
                        .HasForeignKey("bL_produitproduit_id");

                    b.Navigation("bL_client");

                    b.Navigation("bL_produit");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Devis", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.Client", "Devis_client")
                        .WithMany()
                        .HasForeignKey("Devis_clientid_client");

                    b.HasOne("Application_Facturation_V0.Models.Produit", "Devis_produit")
                        .WithMany()
                        .HasForeignKey("Devis_produitproduit_id");

                    b.Navigation("Devis_client");

                    b.Navigation("Devis_produit");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Facture", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.Client", "facture_client")
                        .WithMany()
                        .HasForeignKey("facture_clientid_client");

                    b.HasOne("Application_Facturation_V0.Models.Produit", "facture_produit")
                        .WithMany()
                        .HasForeignKey("facture_produitproduit_id");

                    b.Navigation("facture_client");

                    b.Navigation("facture_produit");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.LigneBL", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.Produit", "produitBL")
                        .WithMany()
                        .HasForeignKey("produitBLproduit_id");

                    b.Navigation("produitBL");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.LigneFacture", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.Produit", "produit")
                        .WithMany()
                        .HasForeignKey("produit_id1");

                    b.Navigation("produit");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.LigneProduit", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.Produit", "produit")
                        .WithMany("ligneProduits")
                        .HasForeignKey("produit_id1");

                    b.Navigation("produit");
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Produit", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.Fournisseur", "fournisseurP")
                        .WithMany()
                        .HasForeignKey("fournisseurPfournisseur_id");

                    b.Navigation("fournisseurP");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Application_Facturation_V0.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Application_Facturation_V0.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Application_Facturation_V0.Models.Produit", b =>
                {
                    b.Navigation("ligneProduits");
                });
#pragma warning restore 612, 618
        }
    }
}
